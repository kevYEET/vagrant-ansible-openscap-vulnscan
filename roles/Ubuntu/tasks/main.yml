- name: Print OS release
  debug:
    msg: "The OS release is {{ ansible_distribution_release }}"
- name: Update and upgrade packages for Ubuntu
  become: true
  apt:
    upgrade: yes
    update_cache: yes
    cache_valid_time: 86400 #One day

- name: Check if nano is latest and installed
  apt:
    name: nano
    state: latest

- name: install nginx
  apt: pkg=nginx state=present
- name: enable nginx to start on boot
  systemd: name=nginx enabled=yes
- name: start nginx
  service: name=nginx state=started

- name: Copy apt update script to server
  copy:
    src: files/apt_update.sh
    dest: /usr/local/bin/apt_update.sh
    mode: 0755
- name: Add cron job to run apt update every day at midnight
  cron:
    name: "Run apt update every day"
    special_time: daily
    job: "/usr/local/bin/apt_update.sh"

- name: Ensure fail2ban package is installed
  apt:
    name: fail2ban
    state: latest

- name: Copy jail configuration
  template:
    src: files/jail.conf
    dest: "/etc/fail2ban/jail.d/"
    mode: 0644

- name: Start and enable fail2ban service
  service:
    name: fail2ban
    state: started
    enabled: true

- name: Reload fail2ban to pick up new jail config
  command: fail2ban-client reload

- name: Rolling SSH hardening
  become: true
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: '^Ciphers'
    line: 'Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr'
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: '^MACs'
    line: 'MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256,umac-128@openssh.com'
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: '^PermitRootLogin'
    line: 'PermitRootLogin no'
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: '^PasswordAuthentication'
    line: 'PasswordAuthentication no'
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: '^X11Forwarding'
    line: 'X11Forwarding no'
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: '^LogLevel'
    line: 'LogLevel verbose'

- name: Install ufw
  package:
    name: ufw
    state: present

- name: Enable ufw
  service:
    name: ufw
    state: started
    enabled: yes


- name: Default deny incoming
  ufw:
    policy: deny
    direction: incoming
- name: Allow SSH
  ufw:
    rule: allow
    port: 22
    proto: tcp
- name: Allow HTTP/HTTPS
  ufw:
    rule: allow
    port: "80,443"
    proto: tcp
        
- name: Restart ufw
  service:
    name: ufw
    state: started
    enabled: yes
  notify:
    - Restart ufw

- name: install bzip2
  apt: pkg=bzip2 state=present

- name: install openscap-scanner on Ubuntu
  apt:
    name: libopenscap8
    state: latest 

- name: validate installation
  shell: oscap --version | grep "command line tool"
  register: oscap_version
- name: print oscap version
  debug: msg={{ oscap_version.stdout }}
- name: copy script
  copy:
    src: files/openscap_scan.sh
    dest: /home/vagrant/openscap_scan.sh
    mode: 0755
- name: Scan system for vulnerability
  shell: /home/vagrant/openscap_scan.sh